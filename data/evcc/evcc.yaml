network:
  # setting to `https` does not enable https, it only changes the way URLs are generated
  schema: http
  host: evcc.local
  port: 7070

interval: 30s # control cycle interval

sponsortoken: PUT_YOUR_EVCC_SPONSOR_TOKEN_HERE

# telemetry: true

# log settings
log: info

levels:
  site: info
  lp-1: info
  cache: error
  db: error

modbusproxy:
  #  - port: 5200
  #    uri: solar-edge:502
  #    # rtu: true
  #    # readonly: true

# Meter definitions
# for documentation see https://docs.evcc.io/docs/devices/meters
meters:

  # Growatt MQTT data from Grott daemon (https://github.com/johanmeijer/grott)
  #- name: growatt_mqtt
  #  type: custom
  #  power: # [W]
  #    source: mqtt
  #    topic: energy/growatt
  #    jq: .values.pvpowerout
  #    scale: 0.1
  #    timeout: 130s
  #  energy: #[kWh)]]
  #    source: mqtt
  #    topic: energy/growatt
  #    jq: .values.pvenergytotal  
  #    scale: 0.1
  #    timeout: 130s 

  # DSMR Reader grid usage directly via WebAPI
  - name: dsmr_api
    type: custom
    power:
      source: calc
      add:
      - source: http
        uri: http://dsmr:80/api/v2/consumption/electricity-live
        method: GET # default HTTP method
        headers:
        - content-type: application/json
        - X-AUTHKEY: PUT_YOUR_DSMR_API_KEY_HERE
        insecure: true # set to true to trust self-signed certificates
        jq: '.|{currently_delivered}| join(" ")'
        scale: 1
        timeout: 10s
      - source: http
        uri: http://dsmr:80/api/v2/consumption/electricity-live
        method: GET # default HTTP method
        headers:
        - content-type: application/json
        - X-AUTHKEY: PUT_YOUR_DSMR_API_KEY_HERE
        insecure: true # set to true to trust self-signed certificates
        jq: '.|{currently_returned}| join(" ")'
        scale: -1
        timeout: 10s
    energy:
      source: calc
      add:
      - source: http
        uri: http://dsmr:80/api/v2/consumption/today
        method: GET # default HTTP method
        headers:
        - content-type: application/json
        - X-AUTHKEY: PUT_YOUR_DSMR_API_KEY_HERE
        insecure: true # set to true to trust self-signed certificates
        jq: '.|{electricity_merged}| join(" ")'
        scale: 1
        timeout: 10s
      - source: http
        uri: http://dsmr:80/api/v2/consumption/today
        method: GET # default HTTP method
        headers:
        - content-type: application/json
        - X-AUTHKEY: PUT_YOUR_DSMR_API_KEY_HERE
        insecure: true # set to true to trust self-signed certificates
        jq: '.|{electricity_returned_merged}| join(" ")'
        scale: -1
        timeout: 10s
    currents:
    - source: http
      uri: http://dsmr:80/api/v2/datalogger/dsmrreading?limit=1&ordering=-timestamp
      method: GET # default HTTP method
      headers:
      - content-type: application/json
      - X-AUTHKEY: PUT_YOUR_DSMR_API_KEY_HERE
      insecure: true # set to true to trust self-signed certificates
      jq: '.results[]|{phase_power_current_l1}| join(" ")'
      scale: 1
      timeout: 10s
    - source: http
      uri: http://dsmr:80/api/v2/datalogger/dsmrreading?limit=1&ordering=-timestamp
      method: GET # default HTTP method
      headers:
      - content-type: application/json
      - X-AUTHKEY: PUT_YOUR_DSMR_API_KEY_HERE
      insecure: true # set to true to trust self-signed certificates
      jq: '.results[]|{phase_power_current_l2}| join(" ")'
      scale: 1
      timeout: 10s
    - source: http
      uri: http://dsmr:80/api/v2/datalogger/dsmrreading?limit=1&ordering=-timestamp
      method: GET # default HTTP method
      headers:
      - content-type: application/json
      - X-AUTHKEY: PUT_YOUR_DSMR_API_KEY_HERE
      insecure: true # set to true to trust self-signed certificates
      jq: '.results[]|{phase_power_current_l3}| join(" ")'
      scale: 1
      timeout: 10s

#  # Alternative dsmr reader config via MQTT (depends on mqqt intermediate daemon so rather direct http WebAPI)
#  - name: dsmr_mqtt
#    type: template
#    template: mqtt-meter
#    usage: grid
#    power: dsmr/reading/electricity_currently_delivered
#    scalepower: 1000
#    energy: dsmr/day-consumption/electricity_merged
#    scaleenergy: 1
#    currentp1: dsmr/reading/phase_power_current_l1
#    currentp2: dsmr/reading/phase_power_current_l2
#    currentp3: dsmr/reading/phase_power_current_l3
#    timeout: 60s

# Charger definitions
# for documentation see https://docs.evcc.io/docs/devices/chargers
chargers:
  - name: alfen_plein
    type: template
    template: alfen
    modbus: tcpip
    id: 1
    host: PUT_THE_IP_OF_YOUR_ALFEN_CHARGER_HERE # Hostname of Alfen charger
    port: 502 # Port

# Vehicle definitions
# for documentation see https://docs.evcc.io/docs/devices/vehicles
vehicles:
#  - name: vw_id_4
#    type: template
#    template: id
#    title: ID.4 # Wird in der Benutzeroberfläche angezeigt (optional)
#    user: # Benutzerkonto (bspw. E-Mail Adresse, User Id, etc.)
#    password: # Passwort des Benutzerkontos (bei führenden Nullen bitte in einfache Hochkommata setzen)
#    vin: WVWZZZ... # Erforderlich, wenn mehrere Fahrzeuge des Herstellers vorhanden sind (optional)
#    capacity: 50 # Akkukapazität in kWh (optional) 

# Site describes the EVU connection, PV and home battery
site:
  title: YOURSITENAME
  meters:
    grid: dsmr_api
    #pv: growatt_mqtt
    #battery:
    #aux:
  residualPower: 0 # additional household usage margin
  prioritySoc: 0 # give home battery priority up to this soc (empty to disable)
  bufferSoc: 0 # continue charging on battery above soc (0 to disable)
  bufferStartSoc: 0 # start charging on battery above soc (0 to disable)
  maxGridSupplyWhileBatteryCharging: 0 # ignore battery charging if AC consumption is above this value
  smartCostLimit: 0 # set cost limit for automatic charging in PV mode

# loadpoint describes the charger, charge meter and connected vehicle
loadpoints:
  - title: Laadpaal binnenplaats # display name for UI
    charger: alfen_plein # charger
    #meter: charge # charge meter
    mode: "pv" # set default charge mode, use "off" to disable by default if charger is publicly available
    #vehicle: car1 # set default vehicle (disables vehicle detection)
    resetOnDisconnect: true # set defaults when vehicle disconnects
    phases: 0 # electrical connection (normal charger: default 3 for 3 phase, 1p3p charger: 0 for "auto" or 1/3 for fixed phases)
    minCurrent: 6 # minimum charge current (default 6A)
    maxCurrent: 16 # maximum charge current (default 16A)

    # remaining settings are experts-only and best left at default values
    priority: 0 # relative priority for concurrent charging in PV mode with multiple loadpoints (higher values have higher priority)
    soc:
      # polling defines usage of the vehicle APIs
      # Modifying the default settings it NOT recommended. It MAY deplete your vehicle's battery
      # or lead to vehicle manufacturer banning you from API use. USE AT YOUR OWN RISK.
      poll:
        # poll mode defines under which condition the vehicle API is called:
        #   charging: update vehicle ONLY when charging (this is the recommended default)
        #   connected: update vehicle when connected (not only charging), interval defines how often
        #   always: always update vehicle regardless of connection state, interval defines how often (only supported for single vehicle)
        mode: charging
        # poll interval defines how often the vehicle API may be polled if NOT charging
        interval: 60m
      estimate: true # set false to disable interpolating between api updates (not recommended)
    enable: # pv mode enable behavior
      delay: 1m # threshold must be exceeded for this long
      threshold: 0 # grid power threshold (in Watts, negative=export). If zero, export must exceed minimum charge power to enable
    disable: # pv mode disable behavior
      delay: 3m # threshold must be exceeded for this long
      threshold: 0 # maximum import power (W)
    guardDuration: 5m # switch charger contactor not more often than this (default 5m)

tariffs:
  currency: EUR
  grid:
    type: fixed
    price: 0.427

  feedin:
    type: fixed
    price: 0.08

mqtt:
  # broker: 192.168.84.252:1883
  # topic: evcc
  # user:
  # password:

influx:
  # url: http://localhost:8086
  # database: evcc
  # user:
  # password:

messaging:
  events:
    start: # charge start event
      title: Charge started
      msg: Started charging in "${mode}" mode
    stop: # charge stop event
      title: Charge finished
      msg: Finished charging ${chargedEnergy:%.1fk}kWh in ${chargeDuration}.
    connect: # vehicle connect event
      title: Car connected
      msg: "Car connected at ${pvPower:%.1fk}kW PV"
    disconnect: # vehicle connected event
      title: Car disconnected
      msg: Car disconnected after ${connectedDuration}
    soc: # vehicle soc update event
      title: Soc updated
      msg: Battery charged to ${vehicleSoc:%.0f}%
    guest: # vehicle could not be identified
      title: Unknown vehicle
      msg: Unknown vehicle, guest connected?
  services:
   #- type: telegram
   #  token: PUT_YOUR_TELEGRAM_TOKEN_HERE
   #  chats:
   #  - PUT_YOUR_TELEGRAM_CHAT_ID_HERE
